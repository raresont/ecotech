{"version":3,"sources":["webpack:///./src/app/pages/support/support-routing.module.ts","webpack:///./src/app/pages/support/support.html","webpack:///./src/app/pages/support/support.module.ts","webpack:///./src/app/pages/support/support.scss","webpack:///./src/app/pages/support/support.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEf;AAExC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oDAAW;KACvB;CACF,CAAC;AAMF;IAAA;IAAwC,CAAC;IAA5B,wBAAwB;QAJpC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,wBAAwB,CAAI;IAAD,+BAAC;CAAA;AAAJ;;;;;;;;;;;;AChBrC,+mC;;;;;;;;;;;;;;;;;;;;;;;;;;ACAyC;AACM;AACF;AACA;AACL;AAC4B;AAapE;IAAA;IAA6B,CAAC;IAAjB,aAAa;QAXzB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,gFAAwB;aACzB;YACD,YAAY,EAAE;gBACZ,oDAAW;aACZ;SACF,CAAC;OACW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ;;;;;;;;;;;;AClB1B,8CAA8C,oBAAoB,sBAAsB,uBAAuB,EAAE,oCAAoC,qBAAqB,EAAE,wBAAwB,qBAAqB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9J;AAGK;AASlE;IAIE,qBACS,SAA0B,EAC1B,SAA0B;QAD1B,cAAS,GAAT,SAAS,CAAiB;QAC1B,cAAS,GAAT,SAAS,CAAiB;QALnC,cAAS,GAAG,KAAK,CAAC;IAMd,CAAC;IAEC,qCAAe,GAArB;;;;;4BACgB,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4BACxC,OAAO,EAAE,gDAAgD;4BACzD,QAAQ,EAAE,IAAI;yBACf,CAAC;;wBAHI,KAAK,GAAG,SAGZ;wBACF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;KACvB;IAEK,4BAAM,GAAZ,UAAa,IAAY;;;;;;wBACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;6BAElB,IAAI,CAAC,KAAK,EAAV,wBAAU;wBACZ,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;wBACzB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;wBAET,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gCACxC,OAAO,EAAE,qCAAqC;gCAC9C,QAAQ,EAAE,IAAI;6BACf,CAAC;;wBAHI,KAAK,GAAG,SAGZ;wBACF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;;KAEzB;IA9BU,WAAW;QANvB,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;YAGxB,aAAa,EAAE,+DAAiB,CAAC,IAAI;SACtC,CAAC;yCAMoB,8DAAe;YACf,8DAAe;OANxB,WAAW,CAqDvB;IAAD,kBAAC;CAAA;AArDuB","file":"pages-support-support-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { SupportPage } from './support';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SupportPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SupportPageRoutingModule { }\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Support</ion-title>\\r\\n  </ion-toolbar>\\r\\n\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <div class=\\\"support-logo\\\">\\r\\n    <img src=\\\"assets/img/download.png\\\" alt=\\\"Ionic Logo\\\">\\r\\n  </div>\\r\\n\\r\\n  <form #submitForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"submit(submitForm)\\\">\\r\\n    <ion-list lines=\\\"none\\\">\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Enter your support message below</ion-label>\\r\\n        <ion-textarea [(ngModel)]=\\\"supportMessage\\\" name=\\\"supportQuestion\\\" #supportQuestion=\\\"ngModel\\\" rows=\\\"6\\\" required></ion-textarea>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n\\r\\n    <ion-text color=\\\"danger\\\">\\r\\n      <p [hidden]=\\\"supportQuestion.valid || submitted === false\\\" padding-left>\\r\\n        Support message is required\\r\\n      </p>\\r\\n    </ion-text>\\r\\n\\r\\n    <div padding>\\r\\n      <ion-button expand=\\\"block\\\" type=\\\"submit\\\">Submit</ion-button>\\r\\n    </div>\\r\\n  </form>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { SupportPage } from './support';\r\nimport { SupportPageRoutingModule } from './support-routing.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SupportPageRoutingModule\r\n  ],\r\n  declarations: [\r\n    SupportPage,\r\n  ]\r\n})\r\nexport class SupportModule { }\r\n","module.exports = \"page-support .support-logo {\\n  padding: 20px 0;\\n  min-height: 200px;\\n  text-align: center; }\\n\\npage-support .support-logo img {\\n  max-width: 150px; }\\n\\npage-support .list {\\n  margin-bottom: 0; }\\n\"","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { AlertController, ToastController } from '@ionic/angular';\r\n\r\n\r\n@Component({\r\n  selector: 'page-support',\r\n  templateUrl: 'support.html',\r\n  styleUrls: ['./support.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SupportPage {\r\n  submitted = false;\r\n  supportMessage: string;\r\n\r\n  constructor(\r\n    public alertCtrl: AlertController,\r\n    public toastCtrl: ToastController\r\n  ) { }\r\n\r\n  async ionViewDidEnter() {\r\n    const toast = await this.toastCtrl.create({\r\n      message: 'This does not actually send a support request.',\r\n      duration: 3000\r\n    });\r\n    await toast.present();\r\n  }\r\n\r\n  async submit(form: NgForm) {\r\n    this.submitted = true;\r\n\r\n    if (form.valid) {\r\n      this.supportMessage = '';\r\n      this.submitted = false;\r\n\r\n      const toast = await this.toastCtrl.create({\r\n        message: 'Your support request has been sent.',\r\n        duration: 3000\r\n      });\r\n      await toast.present();\r\n    }\r\n  }\r\n\r\n  // If the user enters text in the support question and then navigates\r\n  // without submitting first, ask if they meant to leave the page\r\n  // async ionViewCanLeave(): Promise<boolean> {\r\n  //   // If the support message is empty we should just navigate\r\n  //   if (!this.supportMessage || this.supportMessage.trim().length === 0) {\r\n  //     return true;\r\n  //   }\r\n\r\n  //   return new Promise((resolve: any, reject: any) => {\r\n  //     const alert = await this.alertCtrl.create({\r\n  //       title: 'Leave this page?',\r\n  //       message: 'Are you sure you want to leave this page? Your support message will not be submitted.',\r\n  //       buttons: [\r\n  //         { text: 'Stay', handler: reject },\r\n  //         { text: 'Leave', role: 'cancel', handler: resolve }\r\n  //       ]\r\n  //     });\r\n\r\n  //     await alert.present();\r\n  //   });\r\n  // }\r\n}\r\n"],"sourceRoot":""}